'use client'
import React, { useState, useMemo } from 'react'
import Image from 'next/image'

type Slide = { src: string; alt: string }

export default function ExploreCarousel({ slides }: { slides: Slide[] }) {
  const [i, setI] = useState(0)
  const n = slides.length
  const go = (d: number) => setI((i + d + n) % n)
  const order = useMemo(() => {
    const arr = []
    for (let k = -2; k <= 2; k++) arr.push((i + k + n) % n)
    return arr
  }, [i, n])

  function styleFor(offsetIndex: number) {
    if (offsetIndex === 2 || offsetIndex === 0) return {}
    const map = {
      '-2': { x: '-44%', scale: 0.82, z: 0, op: 0.25 },
      '-1': { x: '-25%', scale: 0.9, z: 5, op: 0.55 },
      '0':  { x: '0%',   scale: 1.0, z: 10, op: 1 },
      '1':  { x: '25%',  scale: 0.9, z: 5, op: 0.55 },
      '2':  { x: '44%',  scale: 0.82, z: 0, op: 0.25 }
    } as const
    // @ts-ignore
    const m = map[String(offsetIndex) as '-2'|'-1'|'0'|'1'|'2']
    return {
      transform: `translateX(${m.x}) scale(${m.scale})`,
      zIndex: m.z,
      opacity: m.op
    }
  }

  return (
    <div className="w-full">
      <div className="relative mx-auto h-[48vw] max-h-[420px] min-h-[220px] w-full max-w-5xl">
        <div className="absolute inset-0 overflow-visible">
          <div className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
            {[ -2, -1, 0, 1, 2 ].map((off) => {
              const idx = (i + off + n) % n
              const st = styleFor(off)
              return (
                <div
                  key={`slide-${idx}`}
                  className="absolute aspect-[16/9] w-[72vw] max-w-[820px] min-w-[280px] overflow-hidden rounded-xl shadow-[0_12px_40px_rgba(0,0,0,.25)]"
                  style={st as React.CSSProperties}
                >
                  <Image
                    src={slides[idx].src}
                    alt={slides[idx].alt}
                    fill
                    sizes="(max-width:768px) 90vw, 820px"
                    className="object-cover"
                    priority={off===0}
                  />
                </div>
              )
            })}
          </div>
        </div>

        <button
          aria-label="Previous"
          onClick={() => go(-1)}
          className="absolute left-4 top-1/2 -translate-y-1/2 rounded-full bg-white/95 px-3 py-2 text-lg leading-none shadow hover:bg-white transition"
        >‹</button>
        <button
          aria-label="Next"
          onClick={() => go(1)}
          className="absolute right-4 top-1/2 -translate-y-1/2 rounded-full bg-white/95 px-3 py-2 text-lg leading-none shadow hover:bg-white transition"
        >›</button>
      </div>

      <div className="mt-4 flex items-center justify-center gap-2">
        {slides.map((_, idx) => (
          <button
            key={idx}
            aria-label={`Go to slide ${idx + 1}`}
            onClick={() => setI(idx)}
            className={`h-2 w-2 rounded-full transition ${i === idx ? 'bg-emerald-700' : 'bg-emerald-200'}`}
          />
        ))}
      </div>
    </div>
  )
}
